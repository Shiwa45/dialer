# Generated by Django 5.0.7 on 2025-07-15 07:08

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('calls', '0002_initial'),
        ('campaigns', '0003_alter_campaign_campaign_id'),
        ('leads', '0002_leadfilter_leadrecyclingrule_and_more'),
        ('telephony', '0003_alter_extensionstable_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentBreakCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_paid', models.BooleanField(default=True, help_text='Is this a paid break?')),
                ('max_duration', models.PositiveIntegerField(blank=True, help_text='Maximum duration in minutes (null = unlimited)', null=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=1)),
                ('color_code', models.CharField(default='#6c757d', help_text='Hex color code', max_length=7)),
            ],
            options={
                'verbose_name': 'Agent Break Code',
                'verbose_name_plural': 'Agent Break Codes',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AgentCallbackTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_time', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'Low'), (2, 'Normal'), (3, 'High'), (4, 'Urgent')], default=2)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('missed', 'Missed')], default='pending', max_length=20)),
                ('completed_time', models.DateTimeField(blank=True, null=True)),
                ('completion_notes', models.TextField(blank=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='callback_tasks', to=settings.AUTH_USER_MODEL)),
                ('call_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='callback_task', to='calls.calllog')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campaigns.campaign')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_callback_tasks', to=settings.AUTH_USER_MODEL)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='callback_tasks', to='leads.lead')),
            ],
            options={
                'verbose_name': 'Agent Callback Task',
                'verbose_name_plural': 'Agent Callback Tasks',
                'ordering': ['scheduled_time', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='AgentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note_type', models.CharField(choices=[('performance', 'Performance'), ('training', 'Training'), ('disciplinary', 'Disciplinary'), ('recognition', 'Recognition'), ('general', 'General'), ('schedule', 'Schedule'), ('technical', 'Technical')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False, help_text='Only visible to managers')),
                ('is_important', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_notes', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_agent_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Note',
                'verbose_name_plural': 'Agent Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentPerformanceGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal_type', models.CharField(choices=[('calls_per_hour', 'Calls Per Hour'), ('contact_rate', 'Contact Rate %'), ('conversion_rate', 'Conversion Rate %'), ('talk_time', 'Average Talk Time'), ('sales_per_day', 'Sales Per Day'), ('revenue_per_day', 'Revenue Per Day'), ('quality_score', 'Quality Score')], max_length=20)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20)),
                ('target_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('achieved', models.BooleanField(default=False)),
                ('achievement_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_goals', to=settings.AUTH_USER_MODEL)),
                ('set_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='set_performance_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Performance Goal',
                'verbose_name_plural': 'Agent Performance Goals',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='AgentScript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('script_type', models.CharField(choices=[('opening', 'Opening Script'), ('product', 'Product Presentation'), ('objection', 'Objection Handling'), ('closing', 'Closing Script'), ('callback', 'Callback Script'), ('transfer', 'Transfer Script'), ('general', 'General Script')], max_length=20)),
                ('content', models.TextField(help_text='Script content with variables like {first_name}, {company}')),
                ('is_global', models.BooleanField(default=False, help_text='Available to all campaigns')),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=1)),
                ('auto_display', models.BooleanField(default=False, help_text='Auto-display when call connects')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agent_scripts', to='campaigns.campaign')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Script',
                'verbose_name_plural': 'Agent Scripts',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AgentWebRTCSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('connecting', 'Connecting'), ('connected', 'Connected'), ('disconnected', 'Disconnected'), ('failed', 'Failed'), ('timeout', 'Timeout')], default='connecting', max_length=20)),
                ('sip_extension', models.CharField(blank=True, max_length=20)),
                ('ice_servers', models.JSONField(blank=True, default=list)),
                ('local_description', models.JSONField(blank=True, default=dict)),
                ('remote_description', models.JSONField(blank=True, default=dict)),
                ('connect_time', models.DateTimeField(blank=True, null=True)),
                ('disconnect_time', models.DateTimeField(blank=True, null=True)),
                ('last_ping', models.DateTimeField(auto_now=True)),
                ('packet_loss', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('jitter', models.PositiveIntegerField(default=0, help_text='Jitter in milliseconds')),
                ('latency', models.PositiveIntegerField(default=0, help_text='Latency in milliseconds')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('browser_info', models.JSONField(blank=True, default=dict)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='webrtc_session', to=settings.AUTH_USER_MODEL)),
                ('asterisk_server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='telephony.asteriskserver')),
            ],
            options={
                'verbose_name': 'Agent WebRTC Session',
                'verbose_name_plural': 'Agent WebRTC Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=1, help_text='Lower number = higher priority')),
                ('max_concurrent_calls', models.PositiveIntegerField(default=1)),
                ('wrap_up_time', models.PositiveIntegerField(default=30, help_text='Wrap-up time in seconds')),
                ('auto_answer', models.BooleanField(default=False)),
                ('receive_inbound', models.BooleanField(default=True)),
                ('make_outbound', models.BooleanField(default=True)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_queues', to=settings.AUTH_USER_MODEL)),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_agent_queues', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_assignments', to='campaigns.campaign')),
            ],
            options={
                'verbose_name': 'Agent Queue',
                'verbose_name_plural': 'Agent Queues',
                'ordering': ['priority', 'assigned_date'],
                'unique_together': {('agent', 'campaign')},
            },
        ),
        migrations.CreateModel(
            name='AgentHotkey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key_combination', models.CharField(help_text='e.g., Ctrl+1, Alt+S', max_length=20)),
                ('action_type', models.CharField(choices=[('disposition', 'Set Disposition'), ('transfer', 'Transfer Call'), ('script', 'Display Script'), ('pause', 'Pause/Resume'), ('hangup', 'Hangup Call'), ('mute', 'Mute/Unmute'), ('hold', 'Hold/Unhold'), ('record', 'Start/Stop Recording')], max_length=20)),
                ('transfer_number', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotkeys', to=settings.AUTH_USER_MODEL)),
                ('disposition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campaigns.disposition')),
                ('script', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agents.agentscript')),
            ],
            options={
                'verbose_name': 'Agent Hotkey',
                'verbose_name_plural': 'Agent Hotkeys',
                'ordering': ['key_combination'],
                'unique_together': {('agent', 'key_combination')},
            },
        ),
        migrations.CreateModel(
            name='AgentSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('skill_name', models.CharField(max_length=100)),
                ('proficiency_level', models.PositiveSmallIntegerField(choices=[(1, 'Beginner'), (2, 'Novice'), (3, 'Intermediate'), (4, 'Advanced'), (5, 'Expert')], default=1)),
                ('certified', models.BooleanField(default=False)),
                ('certification_date', models.DateField(blank=True, null=True)),
                ('certification_expires', models.DateField(blank=True, null=True)),
                ('can_train_others', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent Skill',
                'verbose_name_plural': 'Agent Skills',
                'ordering': ['skill_name', '-proficiency_level'],
                'unique_together': {('agent', 'skill_name')},
            },
        ),
    ]
