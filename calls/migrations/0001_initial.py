# Generated by Django 5.0.7 on 2025-07-04 12:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('campaigns', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CallEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('newchannel', 'New Channel'), ('newstate', 'New State'), ('dial', 'Dial'), ('answer', 'Answer'), ('hangup', 'Hangup'), ('bridge', 'Bridge'), ('unbridge', 'Unbridge'), ('transfer', 'Transfer'), ('hold', 'Hold'), ('unhold', 'Unhold'), ('dtmf', 'DTMF'), ('varset', 'Variable Set')], max_length=20)),
                ('event_time', models.DateTimeField()),
                ('channel', models.CharField(blank=True, max_length=200)),
                ('uniqueid', models.CharField(blank=True, max_length=100)),
                ('event_data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Call Event',
                'verbose_name_plural': 'Call Events',
                'ordering': ['event_time'],
            },
        ),
        migrations.CreateModel(
            name='CallNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Call Note',
                'verbose_name_plural': 'Call Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CallQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('packet_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('jitter', models.PositiveIntegerField(blank=True, help_text='Jitter in milliseconds', null=True)),
                ('latency', models.PositiveIntegerField(blank=True, help_text='Latency in milliseconds', null=True)),
                ('signal_level', models.IntegerField(blank=True, null=True)),
                ('noise_level', models.IntegerField(blank=True, null=True)),
                ('codec_used', models.CharField(blank=True, max_length=20)),
                ('bandwidth_used', models.PositiveIntegerField(blank=True, help_text='Bandwidth in kbps', null=True)),
                ('overall_quality', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')], null=True)),
            ],
            options={
                'verbose_name': 'Call Quality',
                'verbose_name_plural': 'Call Quality Metrics',
            },
        ),
        migrations.CreateModel(
            name='CallRecordingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied'), ('fulfilled', 'Fulfilled')], default='pending', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('fulfilled_date', models.DateTimeField(blank=True, null=True)),
                ('download_link', models.URLField(blank=True)),
                ('expires_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Call Recording Request',
                'verbose_name_plural': 'Call Recording Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conference_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Conference duration in seconds')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Conference',
                'verbose_name_plural': 'Conferences',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('joined_at', models.DateTimeField()),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_muted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Conference Participant',
                'verbose_name_plural': 'Conference Participants',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transfer_type', models.CharField(choices=[('warm', 'Warm Transfer'), ('cold', 'Cold Transfer'), ('conference', 'Conference Transfer')], max_length=20)),
                ('to_number', models.CharField(blank=True, max_length=20)),
                ('transfer_time', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Transfer',
                'verbose_name_plural': 'Transfers',
                'ordering': ['-transfer_time'],
            },
        ),
        migrations.CreateModel(
            name='AgentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('total_duration', models.PositiveIntegerField(default=0, help_text='Total session duration in seconds')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('ended', 'Ended')], default='active', max_length=20)),
                ('calls_handled', models.PositiveIntegerField(default=0)),
                ('talk_time', models.PositiveIntegerField(default=0, help_text='Total talk time in seconds')),
                ('idle_time', models.PositiveIntegerField(default=0, help_text='Total idle time in seconds')),
                ('pause_time', models.PositiveIntegerField(default=0, help_text='Total pause time in seconds')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_sessions', to=settings.AUTH_USER_MODEL)),
                ('current_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.campaign')),
            ],
            options={
                'verbose_name': 'Agent Session',
                'verbose_name_plural': 'Agent Sessions',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='AgentPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pause_reason', models.CharField(choices=[('break', 'Break'), ('lunch', 'Lunch'), ('training', 'Training'), ('meeting', 'Meeting'), ('technical', 'Technical Issues'), ('personal', 'Personal'), ('admin', 'Administrative')], max_length=20)),
                ('pause_start', models.DateTimeField()),
                ('pause_end', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Pause duration in seconds')),
                ('notes', models.TextField(blank=True)),
                ('agent_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pauses', to='calls.agentsession')),
            ],
            options={
                'verbose_name': 'Agent Pause',
                'verbose_name_plural': 'Agent Pauses',
                'ordering': ['-pause_start'],
            },
        ),
        migrations.CreateModel(
            name='CallLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('call_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('uniqueid', models.CharField(blank=True, max_length=100)),
                ('linkedid', models.CharField(blank=True, max_length=100)),
                ('call_type', models.CharField(choices=[('outbound', 'Outbound'), ('inbound', 'Inbound'), ('internal', 'Internal'), ('conference', 'Conference'), ('transfer', 'Transfer')], max_length=20)),
                ('call_status', models.CharField(choices=[('initiated', 'Initiated'), ('ringing', 'Ringing'), ('answered', 'Answered'), ('busy', 'Busy'), ('no_answer', 'No Answer'), ('failed', 'Failed'), ('hangup', 'Hangup'), ('transferred', 'Transferred'), ('conference', 'Conference')], default='initiated', max_length=20)),
                ('caller_id', models.CharField(blank=True, max_length=100)),
                ('called_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number', regex='^\\+?1?\\d{9,15}$')])),
                ('start_time', models.DateTimeField()),
                ('answer_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_duration', models.PositiveIntegerField(default=0)),
                ('talk_duration', models.PositiveIntegerField(default=0)),
                ('wait_duration', models.PositiveIntegerField(default=0)),
                ('channel', models.CharField(blank=True, max_length=200)),
                ('destination_channel', models.CharField(blank=True, max_length=200)),
                ('hangup_cause', models.PositiveIntegerField(blank=True, null=True)),
                ('hangup_cause_text', models.CharField(blank=True, max_length=100)),
                ('disposition_notes', models.TextField(blank=True)),
                ('is_recorded', models.BooleanField(default=False)),
                ('recording_filename', models.CharField(blank=True, max_length=500)),
                ('cost', models.DecimalField(decimal_places=4, default=0.0, max_digits=10)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_calls', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Call Log',
                'verbose_name_plural': 'Call Logs',
                'ordering': ['-start_time'],
            },
        ),
    ]
