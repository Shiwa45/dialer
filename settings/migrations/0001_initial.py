# Generated by Django 5.0.7 on 2025-07-04 12:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('incremental', 'Incremental Backup'), ('database', 'Database Only'), ('files', 'Files Only'), ('configuration', 'Configuration Only')], max_length=20)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='running', max_length=20)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=1000)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('compression_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('is_verified', models.BooleanField(default=False)),
                ('retention_days', models.PositiveIntegerField(default=30)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Backup',
                'verbose_name_plural': 'Backups',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('password_reset', 'Password Reset'), ('report_delivery', 'Report Delivery'), ('alert', 'System Alert'), ('callback_reminder', 'Callback Reminder'), ('campaign_notification', 'Campaign Notification'), ('custom', 'Custom Template')], max_length=22)),
                ('subject', models.CharField(max_length=200)),
                ('body_text', models.TextField(help_text='Plain text version')),
                ('body_html', models.TextField(blank=True, help_text='HTML version')),
                ('available_variables', models.JSONField(default=list, help_text='Available template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('trigger_type', models.CharField(choices=[('campaign_start', 'Campaign Started'), ('campaign_stop', 'Campaign Stopped'), ('high_abandon_rate', 'High Abandon Rate'), ('agent_login', 'Agent Login'), ('agent_logout', 'Agent Logout'), ('system_error', 'System Error'), ('low_lead_count', 'Low Lead Count'), ('callback_due', 'Callback Due'), ('recording_failure', 'Recording Failure')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('conditions', models.JSONField(default=dict, help_text='Trigger conditions')),
                ('notification_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App Notification'), ('webhook', 'Webhook')], max_length=20)),
                ('recipients', models.JSONField(default=list, help_text='List of recipients')),
                ('is_active', models.BooleanField(default=True)),
                ('cooldown_period', models.PositiveIntegerField(default=300, help_text='Cooldown period in seconds to prevent spam')),
                ('max_notifications_per_hour', models.PositiveIntegerField(default=10)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('trigger_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('message_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='settings.emailtemplate')),
            ],
            options={
                'verbose_name': 'Notification Rule',
                'verbose_name_plural': 'Notification Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('telephony', 'Telephony'), ('campaigns', 'Campaigns'), ('leads', 'Leads'), ('agents', 'Agents'), ('security', 'Security'), ('email', 'Email'), ('notifications', 'Notifications')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('default_value', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL'), ('password', 'Password')], default='string', max_length=20)),
                ('validation_rules', models.JSONField(blank=True, default=dict)),
                ('is_system', models.BooleanField(default=False, help_text='System settings cannot be deleted')),
                ('requires_restart', models.BooleanField(default=False)),
                ('is_sensitive', models.BooleanField(default=False, help_text='Sensitive data (passwords, etc.)')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('create', 'Record Created'), ('update', 'Record Updated'), ('delete', 'Record Deleted'), ('view', 'Record Viewed'), ('export', 'Data Exported'), ('import', 'Data Imported'), ('config_change', 'Configuration Changed'), ('permission_change', 'Permission Changed')], max_length=20)),
                ('description', models.TextField()),
                ('object_type', models.CharField(blank=True, max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('object_repr', models.CharField(blank=True, max_length=200)),
                ('changes', models.JSONField(blank=True, default=dict, help_text='Before/after values')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='settings_au_user_id_26a606_idx'), models.Index(fields=['action_type', 'created_at'], name='settings_au_action__e2f382_idx'), models.Index(fields=['object_type', 'object_id'], name='settings_au_object__36ae87_idx')],
            },
        ),
    ]
